/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pages_index_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pages/index.css */ \"./src/pages/index.css\");\n/* harmony import */ var _scripts_card_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/card.js */ \"./src/scripts/card.js\");\n/* harmony import */ var _scripts_modal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/modal.js */ \"./src/scripts/modal.js\");\n/* harmony import */ var _scripts_validation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/validation.js */ \"./src/scripts/validation.js\");\n/* harmony import */ var _scripts_api_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/api.js */ \"./src/scripts/api.js\");\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n//***Основной скрипт, собирающий все приложение***\n\n\n\n\n\n\n\n// === DOM узлы ===\n// *Попапы\nvar profileEditPopup = document.querySelector(\".popup_type_edit\"); // Попап редактирования профиля\nvar cardAddPopup = document.querySelector(\".popup_type_new-card\"); // Попап добавления карточки\nvar imageViewPopup = document.querySelector(\".popup_type_image\"); // Попап с изображением\nvar avatarEditPopup = document.querySelector('.popup_type_new-avatar'); // Попап редактирования аватара\n\n// *Поля ввода\nvar profileNameInput = document.querySelector(\".popup__input_type_name\"); // Поле ввода имени\nvar profileJobInput = document.querySelector(\".popup__input_type_description\"); // Поле ввода описания работы\nvar cardNameInput = document.querySelector(\".popup__input_type_card-name\"); // Поле ввода названия места\nvar cardUrlInput = document.querySelector(\".popup__input_type_url\"); // Поле ввода URL изображения\nvar avatarUrlInput = document.querySelector('.popup__input_type_avatar'); // Поле ввода URL аватара\n\n// *Кнопки\nvar popupCloseButtons = document.querySelectorAll(\".popup__close\"); // Все кнопки закрытия попапов\nvar profileEditButton = document.querySelector(\".profile__edit-button\"); // Кнопка редактирования профиля\nvar cardAddButton = document.querySelector(\".profile__add-button\"); // Кнопка добавления новой карточки\nvar avatarEditButton = document.querySelector('.profile__avatar-edit-button'); // Кнопка редактирования аватара\n\n// *Формы\nvar profileEditForm = document.querySelector(\"[name='edit-profile']\"); // Форма редактирования профиля\nvar cardAddForm = document.querySelector(\"[name='new-place']\"); // Форма добавления нового места\nvar avatarAddForm = document.querySelector(\"[name='new-avatar']\");\n\n// *Элементы изображений\nvar popupImageElement = document.querySelector(\".popup__image\"); // Элемент изображения в попапе\nvar popupImageCaption = document.querySelector(\".popup__caption\"); // Подпись к изображению\n\n// *Элементы профиля\nvar profileTitleElement = document.querySelector(\".profile__title\"); // Имя профиля\nvar profileDescriptionElement = document.querySelector(\".profile__description\"); // Описание профиля\nvar profileAvatarElement = document.querySelector('.profile__image');\n\n// *Иные DOM узлы\nvar cardsContainer = document.querySelector(\".places__list\"); // Список карточек мест\n\nvar userId;\n\n// Конфиг валидации\nvar validationConfig = {\n  formSelector: '.popup__form',\n  // Селектор форм\n  inputSelector: '.popup__input',\n  // Селектор полей ввода\n  submitButtonSelector: '.popup__button',\n  // Селектор кнопок отправки\n  inactiveButtonClass: 'popup__button_disabled',\n  // Класс неактивной кнопки\n  inputErrorClass: 'popup__input_type_error',\n  // Класс невалидного поля\n  errorClass: 'popup__error_visible' // Класс видимого сообщения об ошибке\n};\n\n// === Обработчики ===\n// *Обработчик кнопки редактирования профиля\nprofileEditButton.addEventListener(\"click\", function () {\n  // Заполняем поля попапа текущими значениями из профиля\n  profileNameInput.value = profileTitleElement.textContent;\n  profileJobInput.value = profileDescriptionElement.textContent;\n  (0,_scripts_validation_js__WEBPACK_IMPORTED_MODULE_3__.clearValidation)(profileEditPopup, validationConfig);\n  // Открываем попап редактирования\n  (0,_scripts_modal_js__WEBPACK_IMPORTED_MODULE_2__.openModal)(profileEditPopup);\n});\n\n// *Обработчик кнопки добавления карточки\ncardAddButton.addEventListener(\"click\", function () {\n  (0,_scripts_validation_js__WEBPACK_IMPORTED_MODULE_3__.clearValidation)(cardAddPopup, validationConfig);\n  (0,_scripts_modal_js__WEBPACK_IMPORTED_MODULE_2__.openModal)(cardAddPopup); // Открываем попап добавления карточки\n});\navatarEditButton.addEventListener('click', function () {\n  (0,_scripts_validation_js__WEBPACK_IMPORTED_MODULE_3__.clearValidation)(avatarEditPopup, validationConfig);\n  (0,_scripts_modal_js__WEBPACK_IMPORTED_MODULE_2__.openModal)(avatarEditPopup); // Открываем попап редактирования аватара\n});\n\n// *Обработчик формы редактирования профиля\nvar handleProfileFormSubmit = function handleProfileFormSubmit(evt) {\n  evt.preventDefault(); // Предотвращаем стандартное поведение формы\n\n  var name = profileNameInput.value;\n  var about = profileJobInput.value;\n  var profileSubmitButton = profileEditForm.querySelector('.popup__button');\n  renderLoading(true, profileSubmitButton); // Показываем индикатор загрузки\n  // Обновляем данные профиля из полей формы\n\n  (0,_scripts_api_js__WEBPACK_IMPORTED_MODULE_4__.saveProfileInfo)(name, about).then(function (userData) {\n    profileTitleElement.textContent = userData.name;\n    profileDescriptionElement.textContent = userData.about;\n    (0,_scripts_modal_js__WEBPACK_IMPORTED_MODULE_2__.closeModal)(profileEditPopup);\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445: \".concat(err));\n  }).finally(function () {\n    renderLoading(false, profileSubmitButton);\n  });\n};\n\n// *Вешаем обработчик на форму редактирования профиля\nprofileEditForm.addEventListener(\"submit\", handleProfileFormSubmit);\n\n// *Обработчик формы добавления новой карточки\nvar handleCardFormSubmit = function handleCardFormSubmit(evt) {\n  evt.preventDefault(); // Предотвращаем стандартное поведение формы\n\n  var name = cardNameInput.value;\n  var link = cardUrlInput.value;\n  var cardSubmitButton = cardAddForm.querySelector('.popup__button');\n  renderLoading(true, cardSubmitButton);\n  // Создаем объект новой карточки из данных формы\n\n  (0,_scripts_api_js__WEBPACK_IMPORTED_MODULE_4__.postNewCards)(name, link).then(function (cardData) {\n    // Создаем и добавляем DOM-элемент карточки\n    var card = (0,_scripts_card_js__WEBPACK_IMPORTED_MODULE_1__.createCard)(cardData, _scripts_card_js__WEBPACK_IMPORTED_MODULE_1__.deleteCard, openImagePopup, _scripts_card_js__WEBPACK_IMPORTED_MODULE_1__.likeCard, userId);\n    cardsContainer.prepend(card); // Добавляем в начало списка\n\n    // Закрываем попап\n    var openedPopup = document.querySelector(\".popup_is-opened\");\n    (0,_scripts_modal_js__WEBPACK_IMPORTED_MODULE_2__.closeModal)(openedPopup);\n\n    // Очищаем форму\n    evt.target.reset();\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445: \".concat(err));\n  }).finally(function () {\n    renderLoading(false, cardSubmitButton);\n  });\n};\n\n// *Вешаем обработчик на форму добавления новой карточки\ncardAddForm.addEventListener(\"submit\", handleCardFormSubmit);\nvar handleAvatarFormSubmit = function handleAvatarFormSubmit(evt) {\n  evt.preventDefault();\n  var avatar = avatarUrlInput.value;\n  var avatarSubmitButton = avatarAddForm.querySelector('.popup__button');\n  renderLoading(true, avatarSubmitButton); // Показываем индикатор загрузки\n\n  (0,_scripts_api_js__WEBPACK_IMPORTED_MODULE_4__.updateAvatar)(avatar).then(function (avatarData) {\n    profileAvatarElement.style.backgroundImage = \"url('\".concat(avatarData.avatar, \"')\");\n    (0,_scripts_modal_js__WEBPACK_IMPORTED_MODULE_2__.closeModal)(avatarEditPopup);\n    evt.target.reset(); // очищаем форму\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445: \".concat(err));\n  }).finally(function () {\n    renderLoading(false, avatarSubmitButton);\n  });\n};\navatarAddForm.addEventListener('submit', handleAvatarFormSubmit);\n\n// === Реализация закрытия попапов по кнопке закрытия ===\npopupCloseButtons.forEach(function (button) {\n  button.addEventListener(\"click\", function () {\n    var popup = button.closest(\".popup\"); // Находим ближайший попап\n    (0,_scripts_modal_js__WEBPACK_IMPORTED_MODULE_2__.closeModal)(popup); // Закрываем его\n  });\n});\n\n// === Функции ===\n// *функция, которая отвечает за открытие попапа с увеличенным изображением карточки и заполнение его данными\nvar openImagePopup = function openImagePopup(imageSrc, imageAlt) {\n  popupImageElement.src = imageSrc; // Устанавливаем источник изображения\n  popupImageElement.alt = imageAlt; // Устанавливаем альтернативный текст\n  popupImageCaption.textContent = imageAlt; // Устанавливаем подпись\n  (0,_scripts_modal_js__WEBPACK_IMPORTED_MODULE_2__.openModal)(imageViewPopup); // Открываем попап с изображением\n};\n\n// *Функция вывода карточек на страницу\nfunction renderCard(cardData) {\n  var card = (0,_scripts_card_js__WEBPACK_IMPORTED_MODULE_1__.createCard)(cardData, _scripts_card_js__WEBPACK_IMPORTED_MODULE_1__.deleteCard, openImagePopup, _scripts_card_js__WEBPACK_IMPORTED_MODULE_1__.likeCard, userId);\n  // Добавляем карточку в список\n  cardsContainer.append(card);\n}\nfunction renderLoading(isLoading, button) {\n  if (isLoading) {\n    button.textContent = \"Сохранение...\"; // Меняем текст на \"Сохранение...\"\n  } else {\n    button.textContent = \"Сохранить\"; // Возвращаем начальный текст\n  }\n}\nPromise.all([(0,_scripts_api_js__WEBPACK_IMPORTED_MODULE_4__.getProfileInfo)(), (0,_scripts_api_js__WEBPACK_IMPORTED_MODULE_4__.getInitialCards)()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    userData = _ref2[0],\n    cards = _ref2[1];\n  userId = userData._id;\n  profileTitleElement.textContent = userData.name;\n  profileDescriptionElement.textContent = userData.about;\n  profileAvatarElement.style.backgroundImage = \"url('\".concat(userData.avatar, \"')\");\n  cards.forEach(function (cardData) {\n    renderCard(cardData);\n  });\n}).catch(function (err) {\n  console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445: \".concat(err));\n});\n\n// Включаем валидацию для всех форм\n(0,_scripts_validation_js__WEBPACK_IMPORTED_MODULE_3__.enableValidation)(validationConfig);\n\n//# sourceURL=webpack://mesto-project-ff/./src/index.js?");

/***/ }),

/***/ "./src/pages/index.css":
/*!*****************************!*\
  !*** ./src/pages/index.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://mesto-project-ff/./src/pages/index.css?");

/***/ }),

/***/ "./src/scripts/api.js":
/*!****************************!*\
  !*** ./src/scripts/api.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteNewCards: () => (/* binding */ deleteNewCards),\n/* harmony export */   getInitialCards: () => (/* binding */ getInitialCards),\n/* harmony export */   getProfileInfo: () => (/* binding */ getProfileInfo),\n/* harmony export */   postNewCards: () => (/* binding */ postNewCards),\n/* harmony export */   saveProfileInfo: () => (/* binding */ saveProfileInfo),\n/* harmony export */   toggleLike: () => (/* binding */ toggleLike),\n/* harmony export */   updateAvatar: () => (/* binding */ updateAvatar)\n/* harmony export */ });\nvar config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-37',\n  headers: {\n    authorization: 'edab2458-d5cb-4f06-95ab-ec7ccf05c210',\n    'Content-Type': 'application/json'\n  }\n};\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n}\n\n// Загрузка информации о пользователе с сервера\nvar getProfileInfo = function getProfileInfo() {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Загрузка карточек с сервера\nvar getInitialCards = function getInitialCards() {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Редактирование профиля\nvar saveProfileInfo = function saveProfileInfo(name, about) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  }).then(checkResponse);\n};\n\n// Добавление новой карточки\nvar postNewCards = function postNewCards(name, link) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(checkResponse);\n};\n\n// Удаление карточки\nvar deleteNewCards = function deleteNewCards(cardId) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(cardId), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Постановка и снятие лайка\nvar toggleLike = function toggleLike(cardId, isLiked) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(cardId), {\n    method: isLiked ? 'PUT' : 'DELETE',\n    headers: config.headers\n  }).then(checkResponse);\n};\n\n// Обновление аватара пользователя\nvar updateAvatar = function updateAvatar(avatar) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/avatar\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatar\n    })\n  }).then(checkResponse);\n};\n\n//# sourceURL=webpack://mesto-project-ff/./src/scripts/api.js?");

/***/ }),

/***/ "./src/scripts/card.js":
/*!*****************************!*\
  !*** ./src/scripts/card.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCard: () => (/* binding */ createCard),\n/* harmony export */   deleteCard: () => (/* binding */ deleteCard),\n/* harmony export */   likeCard: () => (/* binding */ likeCard)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./src/scripts/api.js\");\n// ***Скрипт, содержащий функции для работы карточек***\n\n// Получаем шаблон карточки из HTML\nvar cardTemplate = document.querySelector(\"#card-template\").content;\n\n// === Функции ===\n// *Функция создания карточки\nfunction createCard(cardData, deleteCard, handleImageClick, handleLikeCard, userId) {\n  var cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\n  // Находим и заполняем изображение карточки\n  var cardImage = cardElement.querySelector(\".card__image\");\n  cardImage.src = cardData.link; // Устанавливаем URL изображения\n  cardImage.alt = cardData.name; // Устанавливаем альтернативный текст\n  // Добавляем обработчик клика по изображению карточки\n  cardImage.addEventListener(\"click\", function () {\n    // При клике вызываем переданную функцию handleImageClick с параметрами изображения\n    handleImageClick(cardData.link, cardData.name);\n  });\n  // Находим и заполняем заголовок карточки\n  var cardTitle = cardElement.querySelector(\".card__title\");\n  cardTitle.textContent = cardData.name;\n\n  // Находим кнопку удаления и добавляем обработчик\n  var cardDeleteButton = cardElement.querySelector(\".card__delete-button\");\n  if (cardData.owner && cardData.owner._id !== userId) {\n    cardDeleteButton.remove();\n  } else {\n    cardDeleteButton.addEventListener('click', function () {\n      deleteCard(cardElement, cardData._id);\n    });\n  }\n  var cardLikeButton = cardElement.querySelector('.card__like-button');\n  if (cardData.likes && cardData.likes.some(function (user) {\n    return user._id === userId;\n  })) {\n    cardLikeButton.classList.add('card__like-button_is-active');\n  }\n  cardLikeButton.addEventListener('click', function (evt) {\n    handleLikeCard(evt, cardData._id);\n  });\n  var cardLikeCounter = cardElement.querySelector('.card__like-counter');\n  cardLikeCounter.textContent = cardData.likes.length;\n  return cardElement;\n}\n\n// *Функция удаления карточки\nfunction deleteCard(cardElement, cardId) {\n  (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.deleteNewCards)(cardId).then(function () {\n    // Удаляем карточку из DOM\n    cardElement.remove();\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445: \".concat(err));\n  });\n}\n\n// *Функция лайка карточки\nfunction likeCard(evt, cardId) {\n  var likeButton = evt.target;\n  var isLiked = likeButton.classList.contains('card__like-button_is-active');\n  (0,_api_js__WEBPACK_IMPORTED_MODULE_0__.toggleLike)(cardId, !isLiked).then(function (res) {\n    var cardLikeCounter = likeButton.closest('.card').querySelector('.card__like-counter');\n    cardLikeCounter.textContent = res.likes.length;\n    likeButton.classList.toggle(\"card__like-button_is-active\");\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445: \".concat(err));\n  });\n}\n\n\n//# sourceURL=webpack://mesto-project-ff/./src/scripts/card.js?");

/***/ }),

/***/ "./src/scripts/modal.js":
/*!******************************!*\
  !*** ./src/scripts/modal.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeModal: () => (/* binding */ closeModal),\n/* harmony export */   openModal: () => (/* binding */ openModal)\n/* harmony export */ });\n// ***Скрипт, содержащий функции для работы модульных окон***\n\n// === Функции ===\n// *Функция-обработчик события нажатия Esc\nfunction handleEscapeKey(evt) {\n  // Проверяем, была ли нажата клавиша Escape\n  if (evt.key === \"Escape\") {\n    // Находим текущее открытое модальное окно\n    var openedPopup = document.querySelector(\".popup_is-opened\");\n    // Если открытое окно найдено - закрываем его\n    if (openedPopup) {\n      closeModal(openedPopup);\n    }\n  }\n}\n\n// *Функция-обработчик события клика по оверлею\nfunction handleOverlayClick(evt) {\n  // Проверяем, что клик был именно по оверлею\n  if (evt.target.classList.contains(\"popup\")) {\n    // Если условие выполняется, вызываем функцию закрытия модального окна\n    closeModal(evt.target);\n  }\n}\n\n// *Функция открытия модального окна (попапа)\nfunction openModal(popup) {\n  // Добавляем класс 'popup_is-opened' для отображения попапа\n  popup.classList.add(\"popup_is-opened\");\n  // Добавляем обработчик события нажатия клавиш для закрытия по ESC\n  document.addEventListener(\"keydown\", handleEscapeKey);\n  // Добавляем обработчик клика по оверлею\n  popup.addEventListener(\"click\", handleOverlayClick);\n}\n\n// *Функция закрытия модального окна (попапа)\nfunction closeModal(popup) {\n  // Удаляем класс 'popup_is-opened' для скрытия попапа\n  popup.classList.remove(\"popup_is-opened\");\n  // Удаляем обработчик события нажатия клавиш (для оптимизации)\n  document.removeEventListener(\"keydown\", handleEscapeKey);\n  // Удаляем обработчик клика по оверлею\n  popup.removeEventListener(\"click\", handleOverlayClick);\n}\n\n\n//# sourceURL=webpack://mesto-project-ff/./src/scripts/modal.js?");

/***/ }),

/***/ "./src/scripts/validation.js":
/*!***********************************!*\
  !*** ./src/scripts/validation.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearValidation: () => (/* binding */ clearValidation),\n/* harmony export */   enableValidation: () => (/* binding */ enableValidation)\n/* harmony export */ });\n// Функция показа ошибки валидации для конкретного поля\nfunction showInputError(formElement, inputElement, errorMessage, config) {\n  // Находим элемент ошибки (span) по id поля + суффикс '-error'\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  // Добавляем класс с красной рамкой для невалидного поля\n  inputElement.classList.add(config.inputErrorClass);\n  // Устанавливаем текст ошибки\n  errorElement.textContent = errorMessage;\n  // Делаем сообщение об ошибке видимым\n  errorElement.classList.add(config.errorClass);\n}\n\n// Функция скрытия ошибки валидации\nfunction hideInputError(formElement, inputElement, config) {\n  // Находим элемент ошибки\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  // Убираем красную рамку\n  inputElement.classList.remove(config.inputErrorClass);\n  // Скрываем сообщение об ошибке\n  errorElement.classList.remove(config.errorClass);\n  // Очищаем текст ошибки\n  errorElement.textContent = \"\";\n}\n\n// Основная функция включения валидации\nfunction enableValidation(config) {\n  // Получаем все формы по переданному селектору\n  var formList = Array.from(document.querySelectorAll(config.formSelector));\n\n  // Функция проверки наличия невалидных полей\n  var hasInvalidInput = function hasInvalidInput(inputList) {\n    // Проверяем, есть ли хотя бы одно невалидное поле\n    return inputList.some(function (inputElement) {\n      return !inputElement.validity.valid;\n    });\n  };\n\n  // Функция переключения состояния кнопки\n  var toggleButtonState = function toggleButtonState(inputList, buttonElement) {\n    if (hasInvalidInput(inputList)) {\n      // Если есть невалидные поля - деактивируем кнопку\n      buttonElement.disabled = true;\n      buttonElement.classList.add(config.inactiveButtonClass);\n    } else {\n      // Если все поля валидны - активируем кнопку\n      buttonElement.disabled = false;\n      buttonElement.classList.remove(config.inactiveButtonClass);\n    }\n  };\n\n  // Функция проверки валидности поля\n  var isValid = function isValid(formElement, inputElement) {\n    // Проверяем соответствие pattern (если есть)\n    if (inputElement.validity.patternMismatch) {\n      // Устанавливаем кастомное сообщение из data-атрибута\n      inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n    } else {\n      // Очищаем кастомное сообщение\n      inputElement.setCustomValidity(\"\");\n    }\n    // Проверяем общую валидность поля\n    if (!inputElement.validity.valid) {\n      // Если невалидно - показываем ошибку\n      showInputError(formElement, inputElement, inputElement.validationMessage, config);\n    } else {\n      // Если валидно - скрываем ошибку\n      hideInputError(formElement, inputElement, config);\n    }\n  };\n\n  // Функция установки обработчиков событий для формы\n  var setEventListeners = function setEventListeners(formElement) {\n    // Получаем все поля ввода формы\n    var inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\n    // Получаем кнопку отправки формы\n    var buttonElement = formElement.querySelector(config.submitButtonSelector);\n    // Изначально проверяем состояние кнопки\n    toggleButtonState(inputList, buttonElement);\n    // Добавляем обработчик input для каждого поля\n    inputList.forEach(function (inputElement) {\n      inputElement.addEventListener(\"input\", function () {\n        // При каждом вводе проверяем валидность поля\n        isValid(formElement, inputElement);\n        // И проверяем состояние кнопки\n        toggleButtonState(inputList, buttonElement);\n      });\n    });\n  };\n\n  // Для каждой формы устанавливаем обработчики\n  formList.forEach(function (formElement) {\n    setEventListeners(formElement);\n  });\n}\nfunction clearValidation(formElement, config) {\n  var inputList = formElement.querySelectorAll(config.inputSelector);\n  var buttonElement = formElement.querySelector(config.submitButtonSelector);\n  inputList.forEach(function (input) {\n    hideInputError(formElement, input, config);\n    input.setCustomValidity(\"\");\n  });\n  buttonElement.classList.add(config.inactiveButtonClass);\n  buttonElement.disabled = true;\n}\n\n\n//# sourceURL=webpack://mesto-project-ff/./src/scripts/validation.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;